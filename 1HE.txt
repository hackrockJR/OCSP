Curso de mastermind 

Requisitos

Parrot OS 
virtualbox


Como configurar entorno de escritorio en linux / canal de youtube de s4vitar


cat /etc/passwd contiene:

Usuarios | identificador | Shell | Carpeta  

shell : sh | bash | rbash | zsh | tmux | screen


cat /etc/passwd | grep "sh$"  '''Filtrar las shell que acabe en sh de los usuarios'''

cat /etc/passwd | grep "sh$" | awk '{print $1}' FS= ":"  ''' Filtrar el primer argumento teniendo en cuenta el delimitador los : '''

cat /etc/passwd | grep "sh$" | cut -d ':' -f 1 ''' Filtrar el primer argumento teniendo en cuenta el delimitador los : '''


>>> Nuevo usuario a nivel de sistema <<<

id ''' Ver el usuario '''
sudos su  ''' Ser root '''
whoami  ''' Que usuario soy'''

cd home 
mkdir pepito ''' directorio personal de pepito
useradd -d /home/pepito -s /bin/bash pepito ''' indicarle la carpeta y el bin bash '''
cat /etc/passwd | grep "sh$" 
ls -l 
passwd pepito 
chown pepito pepito ''' asignarle el directorio pepito al usuario pepito'''
chgroup pepito pepito ''' asignarle el grupo pepito al usuario pepito'''

chown pepito:pepito pepito ''' *Igual al anterior pero resumido, asignarle el directorio y grupo  pepito al usuario pepito'''

su pepito ''' migrar al usuario pepito'''

>>>> Lectura de permisos <<<<

ls -l / ''' Enlistar de la raiz '''

d > directory 
r > read 
w > write
x >  Si es fichero (capacidad de ejecucion) | si se aplica al directorio( Es accesible con CD)

rwx (Propetario) rwx (Privilegio del grupo, su propio) 


drwxr-xr-r-x Permisos de otros r-x leer y entrar, pero otros no pueden crear directorios. 

Dar permisos 

sudo pepito
su pepito 
cd pepito/
ls
mkdir directorio 
ls -l 
cd directorio
touch hola
nano hola 
exit

cd /home/pepito
ls 
ls -l

> drwxr-xr-r-x directorio 
cat hola 
mkdir test 
touch fichero

sudo su
cd /home/pepito
ls
ls -l 

chmod o+w directorio     '''dar permisos a otros de escritura.''' 
chmod o-w direcotorio    '''quitar permisos a otros de escritura.'''

Gestionar los grupos 

chmod g+w directorio  '''permisos al grupo'''

chmod g-w,o+w directorio  ''' El grupo no tiene permisos de escritura. pero otros si lo tiene'''

ls -l 

drwr-xrwx pepito pepito 

su jromero

ls -l 

touch fichero

ls

mkdir adios 

ls -l

sudo su ''' pasar a root o pepito para eliminar directorio '''
 
rm -r direcotorio

su pepito 
ls 
mkdir directorio
ls -l 
exit
whoami
ls


groupadd Colegio 

cat /etc/group | tail -n 1 ''' Ver la ultima linea'''

chgrp Colegio directorio ''' el grupo se llama colegio y quiero asigar al fichero directorio'''

usermod -a -G Colegio jromero '''Asignar al grupo colegio el usuario jromero '''

id jromero 

1002(Colegio)

chmod g-rw directorio ''' Quitar los permisos al grupo de lectura y escritura'''
ls 
ls -l 
touch direcotorio/fichero
echo "Hola que tal " > directori/fichero.txt

https://blog.desdelinux.net/permisos-basicos-en-gnulinux-con-chmod/

- Permisos del propetario: 

sobre su carpeta home. 

- Permisos del grupo: 

Asignar permisos a todos los que pertenece al grupo. 

- Permisos de otros: 

Asignar permisos a otros que no pertenece al grupo.

Resultado de ls -l 

Permisos | hard links | Propetario | Grupo | size | fecha de modificacion | Nombre del archivo 

- La mascara 

Permiso 				Identifica

-						Archivo

d						Directorio

b 						Archivo de bloques especiales(Archivos especiales de dispositivos)

c 						Archivo de caracteres especiales (Dispositivo tty, impresora)

l 						Archivo de vinculo o enlace (soft/symbolic link)

p 						Archivo especial de cauce


- Cada 3 caracteres se le conoce los permisos que se le conceden:

Permiso					Identifica

-						Sin permiso

r 						permiso de lectura

w 						Permiso de escritura

x 						Permiso de ejecucion 


Permisos para archivos

<° Lectura: permite, fundamentalmente, visualizar el contenido del archivo.
<° Escritura: permite modificar el contenido del archivo.
<° Ejecución: permite ejecutar el archivo como si de un programa ejecutable se tratase.


Permisos para directorios

<° Lectura: Permite saber qué archivos y directorios contiene el directorio que tiene este permiso.
<° Escritura: permite crear archivos en el directorio, bien sean archivos ordinarios o nuevos directorios.
 Se pueden borrar directorios, copiar archivos en el directorio, mover, cambiar el nombre, etc.
<° Ejecución: permite situarse sobre el directorio para poder examinar su contenido, copiar archivos de o hacia él.
 Si además se dispone de los permisos de escritura y lectura, se podrán realizar todas las operaciones posibles 
 sobre archivos y directorios.
 
Tipo Permiso_Usuario Grupo_Usuario Otros 

- 	      rw			r--			r--

Tipo archivo
El usuario puede: Leer y Escribir
El grupo al que pertenece puede: Leer
otros: Puede leer 


- chmod (change mod)

Permite modificar la mascara.
Sobre archivos y direcotorios.
Si no se especifica usuario ,los cambios aplicara a todos los usuarios. 

Parametros 	Nivel 		Descripcion

u 			dueño		Dueño de directorio o archivo.

g 			Grupo 		Grupo al que pertenece el archivo.

o 			otros		todos los demas usuarios que no son el dueño y no pertenece al grupo


 Dar permiso de ejecución al dueño:

$ chmod u+x komodo.sh

Quitar permiso de ejecución a todos los usuarios:

$ chmod -x komodo.sh

Dar permiso de lectura y escritura a los demás usuarios:

$ chmod o+r+w komodo.sh

Dejar solo permiso de lectura al grupo al que pertenece el archivo:

$ chmod g+r-w-x komodo.sh


- Permisos en formato numerico octal


el bit x es 20 es 1
el bit w es 21 es 2 
el bit r es 22 es 4 

r= 4
w= 2
x= 1

Comninacion de bits encendidos y apagados

Permiso 	valor octal 	Descripcion

---				0			No tiene permiso. 

--x  			1			Solo permiso de ejecucion

-w- 			2			Solo permiso de escritura

-wx 			3 			Permiso de escitura y de ejecucion

r --			4 			Solo permiso de lectura

r-x 			5 			Permiso de lectura y ejecucion 

rw--			6 			permiso de lectura y escitura

rwx				7			todos los permisos establecidos, lectura, escitura y ejecucion


Cuando se combina los permisos de usuarios, grupo y otros. Se obtiene un numero de tres cifras que conforman los permisos
del archivo o del directorio. 

Ejemplos:

rw- --- --- 600 El propetario tiene permiso de lectura y escitura
rwx --x --x 711	El propetario lectura, escritura y ejecucion, el grupo y otro solo de ejecucion
rwx r-x r-x 755 El propetario lectura, escritura y ejecucion , el grupo y otro solo pueden leer y ejecutar
rwx rwx rwx 777 El archivo puede ser leido , escrito y ejecutado por cualquiera. 
r-- --- --- 400 Solo el propetario puede leer el archivo, pero ni el puede modificarlo o ejecutarlo.
rw- r-- --- 640 El propetario puede leer y escribir , el grupo puede solo leer y otros no pueden  hacer nada. 

- Permisos setuid ( Set user id) , SGID (Set group id) , persistencia (sticky bit)

asignados a ficheros ejecutables y permite que cuando un usuario ejecute diche fichero, el proceso adquiera los permisos 
del propetario del fichero ejecutado.

Por ejemplo su 

-rwsr Esta asignado como "s"

Para asignar este bit a un fichero seria:

chmod u+s /bin/su

para quitarlo 

chmod u-s /bin/su

* Nota: Tener cuidado con esta asignacion porque permitiria la escalacion de privilegios. 

- SGID 

setgid permite adquirir los privilegios del grupo asignado al fichero, tambien es asignable a directorios. 

Para asignar chmod g+s /carpeta_compartida
Para quitarlo chmod g-s /carpeta_compartida

Sticky 

Este bit permite asignarle en directorios de los que varios usuarios tienen acceso y permite evitar que un usuario 
pueda borrar ficheros y direcotorios de otro usuario dentro de ese directorio, ya que no tiene permiso de escritura
se asigan "t"

Para asignar o+t /tmp
para quitarlo 0-t /tmp











